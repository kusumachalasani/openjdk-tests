# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This Dockerfile in thirdpart_containers/tomcat/dockerfile dir is used to create an image with
# AdoptOpenJDK jdk binary installed. Basic test dependent executions
# are installed during the building process.
#
# Build tomcat: `docker build -t adoptopenjdk-tomcat-test -f Dockerfile ../.`
#
# This Dockerfile builds image based on adoptopenjdk/openjdk8:latest.
# If you want to build image based on other images, please use
# `--build-arg list` to specify your base image
#
# Build example: `docker build --build-arg IMAGE_NAME=<image_name> --build-arg IMAGE_VERSION=<image_version > -t adoptopenjdk-tomcat-test .`
 
ARG SDK=openjdk8
ARG IMAGE_NAME=adoptopenjdk/$SDK
ARG IMAGE_VERSION=nightly

FROM $IMAGE_NAME:$IMAGE_VERSION

ARG ANT_VERSION=1.10.6
ARG OPENSSL_VERSION=1.1.1d
ARG TOMCAT_TAG=9.0.30

# Install test dependent executable files
RUN apt-get update; \
    apt-get install -y --no-install-recommends \
        git \
        wget \
        tar \
        make \
        gcc \
        linux-libc-dev \
        libc6-dev \
    ; \
    rm -rf /var/lib/apt/lists/*

ENV ANT_VERSION=$ANT_VERSION
ENV ANT_HOME=/opt/ant

# Install Ant
RUN wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \
    && wget --no-check-certificate --no-cookies http://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz.sha512 \
    && echo "$(cat apache-ant-${ANT_VERSION}-bin.tar.gz.sha512) apache-ant-${ANT_VERSION}-bin.tar.gz" | sha512sum -c \
    && tar -zvxf apache-ant-${ANT_VERSION}-bin.tar.gz -C /opt/ \
    && ln -s /opt/apache-ant-${ANT_VERSION} /opt/ant \
    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz \
    && rm -f apache-ant-${ANT_VERSION}-bin.tar.gz.sha512

# Add Ant to PATH
ENV PATH ${PATH}:${ANT_HOME}/bin

ENV OPENSSL_VERSION=$OPENSSL_VERSION
ENV OPENSSL_HOME=/opt/openssl

# Install OpenSSL
RUN wget --no-check-certificate --no-cookies https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
    && wget --no-check-certificate --no-cookies https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz.sha256 \
    && echo "$(cat openssl-${OPENSSL_VERSION}.tar.gz.sha256) openssl-${OPENSSL_VERSION}.tar.gz" | sha256sum -c \
    && tar -zvxf openssl-${OPENSSL_VERSION}.tar.gz -C /opt/ \
    && ln -s /opt/openssl-${OPENSSL_VERSION} /opt/openssl \
    && rm -f openssl-${OPENSSL_VERSION}.tar.gz \
    && rm -f openssl-${OPENSSL_VERSION}.tar.gz.sha256 \
    && cd ${OPENSSL_HOME} \
    && ./config --prefix=/usr --openssldir=/usr/local/openssl shared \
    && make \
    && make install

ENV JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8"

# This is the main script to run tomcat tests.  
COPY ./dockerfile/tomcat-test.sh /tomcat-test.sh

# Clone tomcat to /tomcat
ENV TOMCAT_TAG=$TOMCAT_TAG
RUN git clone https://github.com/apache/tomcat.git
WORKDIR /tomcat/
RUN git checkout ${TOMCAT_TAG}
WORKDIR /

ENTRYPOINT ["/bin/bash", "/tomcat-test.sh"]