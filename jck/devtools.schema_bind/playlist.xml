<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<include>../jck.mk</include>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_class</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_class,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_dom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_dom,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_factoryMethod</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_factoryMethod,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_globalBindings</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_globalBindings,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_inlineBinaryData</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_inlineBinaryData,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_javaType</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_javaType,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_property</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_property,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-schema_bind-bind_schemaBindings</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(TEST_JDK_HOME)$(D)  $(AND_IF_SUCCESS) \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)system$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(SYSTEMTEST_RESROOT)$(D)systemtest_prereqs;$(JCK_ROOT)$(Q) \
	-java-args-setup=$(Q)$(JVM_OPTIONS)$(Q) \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=schema_bind/bind_schemaBindings,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
</playlist>

